apiVersion: v1
data:
  nginx.conf: |2

    user  root;
    worker_processes  4;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        gzip  on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        include /etc/nginx/conf.d/*.conf;
    }
kind: ConfigMap
metadata:
  name: hsd-dashboard-nginx-conf
  namespace: default

---
apiVersion: v1
data:
  default.conf: |+
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /static/ {
            root /opt/dashboard/; #Django项目所在目录
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
kind: ConfigMap
metadata:
  name: hsd-dashboard-default-conf
  namespace: default

---

kind: Deployment
apiVersion: apps/v1beta2
metadata:
  labels:
    k8s-app: hsd-dashboard
  name: hsd-dashboard
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: hsd-dashboard
  template:
    metadata:
      labels:
        k8s-app: hsd-dashboard
    spec:
      containers:
      - name: hsd-dashboard
        image: heshidai/hsd-dashboard:v0.0.1
      - command:
        - bash
        - -c
        - nginx&&gunicorn --worker-class=gevent -w4 getdevops.wsgi:application -b127.0.0.1:8000
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: kube-config
          mountPath: /root/.kube
        - name: nginx-conf
          mountPath: /mnt/nginx
        - name: default-conf
          mountPath: /etc/nginx/conf.d
        - mountPath: /tmp
          name: tmp-volume
      hostNetwork: true
      volumes:
      - name: nginx-conf
        configMap:
          name: hsd-dashboard-nginx-conf
      - name: default-conf
        configMap:
          name: hsd-dashboard-default-conf
      - name: tmp-volume
        emptyDir: {}
      - hostPath:
          path: /root/.kube
        name: kube-config
---
# ------------------- Dashboard Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: hsd-dashboard
  name: hsd-dashboard
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
  selector:
    k8s-app: hsd-dashboard